## file system utilities

load("@rules_cc//cc:defs.bzl", "cc_library")

# we export these srcs so //src/include/obazl:mkhdrs can generate the export interface obazl.h
exports_files([
    "obazl_fs.c",
])

##########
cc_library(
    name  = "obazl_fs",
    # alwayslink = True,
    linkstatic = 1,
    srcs  = [
        "obazl_fs.c",
        "_obazl_fs.h",
    ],
    hdrs = [
        "@uthash//:include",
        "//vendored/logc:log.h"
    ],
    defines = select({
        "//bzl/host:debug": ["DEBUG_TRACE"],
        "//conditions:default":   []
    }),
    copts = [
        "-std=c11",
        "-g", "-O0",
        "-I", "$(GENDIR)/src/lib/obazl_fs", # obazl_fs.h
        "-I", "$(GENDIR)/external/obazl/src/lib/obazl_fs", # obazl_fs.h
        "-I", "$(GENDIR)/external/tools_obazl/src/lib/obazl_fs", # obazl_fs.h
        "-I", "external/uthash/include",
        "-I", "vendored/logc",
        "-I", "external/obazl/vendored/logc",
        "-I", "external/tools_obazl/vendored/logc"
    ],
    deps = [
        "//src/lib/obazl_utils",
        "//vendored/logc"
    ],
    visibility = ["//visibility:public"]
)

########
genrule(
    name = "mkhdrs",
    srcs = [
        "obazl_fs.c",          # internal header
        "//src/lib/obazl_utils:obazl_utils.c",
    ],
    outs = [
        "_obazl_fs.h"
    ],
    cmd = "\n".join([
        "SRC1=$(location obazl_fs.c)",
        "SRCDIR1=`dirname $$SRC1`",
        "$(location @makeheaders//:makeheaders) \\",
        "    $(location //src/lib/obazl_utils:obazl_utils.c) \\",
        "    $(location obazl_fs.c)",
        "cp $${SRCDIR1}/obazl_fs.h $@",
    ]),
    tools = ["@makeheaders//:makeheaders"]
)

########
genrule(
    name = "mkhdrs_export",
    srcs = [
        "obazl_fs.c",
        # "@uthash//:include"
    ],
    outs = [
        "obazl_fs.h"
    ],
    cmd = "\n".join([
        "SRC1=$(location obazl_fs.c)",
        "SRCDIR1=`dirname $$SRC1`",
        "$(location @makeheaders//:makeheaders) \\",
        "    -h \\",
        "    $(location obazl_fs.c) > $@"
        # "cp $${SRCDIR1}/*.h $(@D)",
    ]),
    tools = ["@makeheaders//:makeheaders"],
    visibility = ["//visibility:public"]
)

# ###########
# cc_library(
#     name = "utils",
#     srcs = [
#         "utils.c",
#         "utils.h",
#         "@uthash//:include",
#     ],
#     # hdrs = [
#     #     "utils.h",
#     # ] + glob(["**/*.h"]),
#     includes = glob(["*.h"]),

#     copts = [
#         "-I", "external/uthash/include",
#         # to get the hdr generated by :mkhdrs:
#         "-I", "$(GENDIR)/src/lib/obazl_meta",  ## local build
#         "-I", "$(GENDIR)/external/tools_obazl/src/lib/obazl_meta",  ## remote build
#     ],
#     linkstatic=1,
#     visibility = ["//visibility:public"]
# )

########
# genrule(
#     name = "utilshdrs",
#     srcs = [
#         "utils.c",
#     ],
#     outs = [
#         "utils.h",
#     ],
#     cmd = "\n".join([
#         "SRCDIR=`dirname $(location utils.c)`",
#         "$(location @makeheaders//:makeheaders) $(location utils.c);",
#         "cp $${SRCDIR}/utils.h $(@D)",
#         # "cp external/tools_obazl/shared/utils.h $(@D)",
#     ]),
#     tools = ["@makeheaders//:makeheaders"]
# )

# ###########
# cc_library(
#     name = "uthash",
#     srcs = [
#         "@uthash//:include"
#     ],
#     includes = [
#         "@uthash//:include"
#     ],
#     linkstatic=1,
#     visibility = ["//visibility:public"]
# )
